#!/usr/bin/env bash
# A script for fixing file permissions automatically.
# by Miles Whittaker <mjwhitta@gmail.com>
#
# --------------------------------------------------------------------
# The MIT License (MIT)
#
# Copyright (c) 2018 Miles Whittaker
#
# Permission is hereby granted, free of charge, to any person
# obtaining a copy of this software and associated documentation files
# (the "Software"), to deal in the Software without restriction,
# including without limitation the rights to use, copy, modify, merge,
# publish, distribute, sublicense, and/or sell copies of the Software,
# and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
# BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
# ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
# --------------------------------------------------------------------

### Helpers begin
check_deps() {
    local missing
    for d in "${deps[@]}"; do
        if [[ -z $(command -v "$d") ]]; then
            # Force absolute path
            if [[ ! -e "/$d" ]]; then
                err "$d was not found"
                missing="true"
            fi
        fi
    done; unset d
    [[ -z $missing ]] || exit 128
}
err() { echo -e "${color:+\e[31m}[!] $*${color:+\e[0m}" >&2; }
errx() { err "${*:2}"; exit "$1"; }
good() { echo -e "${color:+\e[32m}[+] $*${color:+\e[0m}"; }
info() { echo -e "${color:+\e[37m}[*] $*${color:+\e[0m}"; }
long_opt() {
    local arg shift="0"
    case "$1" in
        "--"*"="*) arg="${1#*=}"; [[ -n $arg ]] || return 127 ;;
        *) shift="1"; shift; [[ $# -gt 0 ]] || return 127; arg="$1" ;;
    esac
    echo "$arg"
    return "$shift"
}
subinfo() { echo -e "${color:+\e[36m}[=] $*${color:+\e[0m}"; }
warn() { echo -e "${color:+\e[33m}[-] $*${color:+\e[0m}"; }
### Helpers end

fix_file() {
    if file -b "$1" | grep -qs executable; then
        chmod go-x,u${group:+g}${other:+o}+x "$1"
    else
        chmod ugo-x "$1"
    fi
}

fix_files() {
    if [[ -f "$1" ]]; then
        fix_file "$1"
    elif [[ -d "$1" ]]; then
        while read -r line; do
            fix_file "$line"
        done < <(find "$dir" -type f -print)
    fi
}

usage() {
    cat <<EOF
Usage: ${0##*/} [OPTIONS] [file/dir]

DESCRIPTION
    Automatically fix file permissions.

OPTIONS
    -h, --help        Display this help message
    -f, --fix         Fix the executable permissions
    -g, --group       Open up group permissions
        --no-color    Disable colorized output
    -o, --other       Open up other permissions

EOF
    exit "$1"
}

declare -a args
unset fix group help other
color="true"

# Parse command line options
while [[ $# -gt 0 ]]; do
    case "$1" in
        "--") shift; args+=("$@"); break ;;
        "-f"|"--fix") fix="true" ;;
        "-g"|"--group") group="true" ;;
        "-h"|"--help") help="true" ;;
        "--no-color") unset color ;;
        "-o"|"--other") other="true" ;;
        *) args+=("$1") ;;
    esac
    case "$?" in
        0) ;;
        1) shift ;;
        *) usage "$?" ;;
    esac
    shift
done
[[ ${#args[@]} -eq 0 ]] || set -- "${args[@]}"

# Help info
[[ -z $help ]] || usage 0

# Check for missing dependencies
declare -a deps
deps+=("chmod")
deps+=("file")
deps+=("grep")
check_deps

# Check for valid params
#[[ $# -eq 0 ]] || usage 1

[[ $# -eq 0 ]] || dirs=("$@")
[[ $# -gt 0 ]] || dirs=("$(pwd)")

for dir in "${dirs[@]}"; do
    [[ ! -e "$dir" ]] && echo "$dir does not exist!" && continue

    chmod -R go-rwx,u${group:+g}${other:+o}+rwX "$dir"
    [[ -z $fix ]] || fix_files "$dir"
done

# Always fix some home directory things
[[ ! -d "$HOME/.gnupg" ]] || chmod -R u+rwX,go-rwx "$HOME/.gnupg"
[[ ! -d "$HOME/.ssh" ]] || chmod -R u+rwX,go-rwx "$HOME/.ssh"
chmod go-w "$HOME"
