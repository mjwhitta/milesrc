# If not running interactively, don't do anything
[[ $- == *i* ]] || return

# {{{ Env Vars
declare -a MILESRC_PROMPT
MILESRC_PROMPT=(
    "host;white;blue;remote;white;cyan;root;white;red"
    "vi_ins;white;green;vi_cmd;white;light_magenta;vi_rep;white;red"
    "date;white;light_green"
    "newline"
    "exit;white;red;e-motes;white;green"
    "git;black;white"
    "venv;white;light_red"
    "cwd;white;light_black;nofill"
    "newline"
    "prompt;white;light_black"
)
export MILESRC_PROMPT

# Let's make an educated guess
for dir in code projs projects src; do
    [[ -d $HOME/$dir ]] && export PROJS="$HOME/$dir" && break
done; unset dir
# }}}

# {{{ PATH
# }}}

# {{{ Aliases
alias dt="tmux -2 new -d -s"
alias et="exec tmux -2 new -A -s"
alias eth="exec tmux -2 new -A -s \"\$(hostname -s)\""
alias j="\cd \$(cat $HOME/.proj 2>/dev/null)"
alias nslookup="echo \"use 'dig +domain= +short [-x]' instead\" #"
[[ -z $(command -v pwsh) ]] || alias powershell="TERM=xterm pwsh"
alias save="pwd >\$HOME/.proj"

# Git aliases
if [[ -n $(command -v git) ]]; then
    full="--date=format-local:\"%F_%H%M%S\" --full-history"
    minimal="-b --color-words=. --ignore-blank-lines --minimal"
    tformat="tformat:\"%Cred%h %Cgreen%cd %Cblue%an%Creset %s\""

    alias diff="git diff $minimal"
    alias gc="git gc --aggressive"
    alias gd="git diff $minimal"
    alias gl="git log $full --pretty=$tformat"
    alias grh="git reset --hard"
    alias gs="git status -bs"
    alias gsm="git show $minimal"

    unset full minimal tformat
fi
# }}}

# {{{ Functions
function goplay() {
    [[ -n $(command -v go) ]] || return

    case "${1:-edit}" in
        "build")
            go build -ldflags "-s -w" -o "${2:-goplay}" --trimpath \
                /tmp/goplay.go
            ;;
        "edit")
            vim /tmp/goplay.go
            go fmt /tmp/goplay.go >/dev/null
            ;;
        "fmt") go fmt /tmp/goplay.go >/dev/null ;;
        "-h"|"--help"|"help")
            cat <<EOF
Usage: ${0} [ACTION] [args]

ACTIONS
    build    Compiles /tmp/goplay.go, takes an optional name
    edit     Opens /tmp/goplay.go in vim
    help     Display this help message
    run      Runs /tmp/goplay.go, passes remaining cli args

EOF
            ;;
        "run") go run /tmp/goplay.go "${@:2}" ;;
    esac
}

function moon() { clear; curl -s wttr.in/Moon | head -n -2; }

function weather() {
    clear
    url="wttr.in/~${1:-Lafayette,IN}?Q"
    [[ $COLUMNS -ge 125 ]] || url="${url}n"
    curl -s "$url" | head -n -2
    unset url
}

function wunder() {
    echo -e "\nLAF\nX\n" | nc rainmaker.wunderground.com 23 | \
    grep --color=none -A 2 "Temp(F)"
}

# I like ruby-zoom, but in case it's not installed, create functions
if [[ -z $(command -v z | grep -s "gem") ]]; then
    function z() {
        if [[ -n $(command -v rg) ]]; then
            rg "$@"
        elif [[ -n $(command -v ag) ]]; then
            ag "$@"
        elif [[ -n $(command -v ack-grep) ]]; then
            ack-grep "$@"
        elif [[ -n $(command -v ack) ]]; then
            ack $@
        elif [[ -n $(grep --help 2>&1 | grep -Eis "\s*-P") ]]; then
            grep -HinPrs "$@"
        else
            grep -EHinrs "$@"
        fi
    }
    function zf() {
        find . -regextype posix-extended -iregex ".*$*.*" -print
    }
fi
# }}}

case "$MILESRC_SHELL" in
    *bash)
        # {{{ Bash completions
        # Complete arTTY
        if [[ -n $(command -v arTTY) ]]; then
            function _arTTY_complete() {
                mapfile -t COMPREPLY < <(arTTY --ls -m "^$2" -p)
            }
            complete -F _arTTY_complete art artty arTTY
        fi
        # }}}
        ;;
    *zsh)
        # {{{ Zsh completions
        # Complete arTTY
        if [[ -n $(command -v arTTY) ]]; then
            compdef _gnu_generic art artty arTTY
            function _arTTY_complete() { reply=($(arTTY --ls -p)); }
            compctl -K _arTTY_complete art artty arTTY
        fi

        # Complete ruby-zoom commands
        compdef _gnu_generic z zc zf zg zl zr
        # }}}
        ;;
esac

# {{{ Wrap-up
# Security stuff
if [[ -f $HOME/.milesrc/local/security ]]; then
    . $HOME/.milesrc/local/security
fi

# Config for this host
if [[ -f $HOME/.milesrc/local/$(hostname -s) ]]; then
    . $HOME/.milesrc/local/$(hostname -s)
fi

if [[ -n $(command -v arTTY) ]]; then
    alias art="arTTY"
    alias artty="arTTY"
    arTTY
else
    alias art="clear"
    alias artty="clear"
    alias arTTY="clear"
    clear
fi
# }}}
