#!/usr/bin/env bash
# A wrapper script for many unix package managers.
# by Miles Whittaker <mjwhitta@gmail.com>
#
# --------------------------------------------------------------------
# The MIT License (MIT)
#
# Copyright (c) 2018 Miles Whittaker
#
# Permission is hereby granted, free of charge, to any person
# obtaining a copy of this software and associated documentation files
# (the "Software"), to deal in the Software without restriction,
# including without limitation the rights to use, copy, modify, merge,
# publish, distribute, sublicense, and/or sell copies of the Software,
# and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
# BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
# ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
# --------------------------------------------------------------------

function gimme() {
    gimme_cleanup() {
        unset action args cask cmd nosave sudo
        unset -f gimme_cleanup gimme_usage
    }

    gimme_usage() {
        echo "Usage: gimme [OPTIONS] [pkg]..."
        echo
        echo "Automatically uses the correct package manager. Default"
        echo "behavior is to install."
        echo
        echo "Options:"
        echo "    -h, --help       Display this help message"
        echo "    -i, --install    Install package(s) (default)"
        echo "    -n, --nosave     Also remove configs"
        echo "    -R, --remove     Remove package(s)"
        echo "    -s, --search     Search for matching packages"
        echo "    -u, --update     Update installed packages"
        echo
        gimme_cleanup
    }

    declare -a args
    unset nosave
    action="install"
    sudo="$(command -v sudo)"

    while [[ $# -gt 0 ]]; do
        case "$1" in
            "--") shift && args+=("$@") && break ;;
            "-h"|"--help") gimme_usage; return 0 ;;
            "-i"|"--install") action="install" ;;
            "-n"|"--nosave") nosave="true" ;;
            "-R"|"--remove") action="remove" ;;
            "-Rn") action="remove"; nosave="true" ;;
            "-s"|"--search") action="search" ;;
            "-u"|"--update") action="update" ;;
            *) args+=("$1") ;;
        esac
        shift
    done
    [[ ${#args[@]} -eq 0 ]] || set -- "${args[@]}"

    case "$action" in
        "install") [[ $# -eq 0 ]] && gimme_usage && return 1 ;;
        "remove") [[ $# -eq 0 ]] && gimme_usage && return 2 ;;
        "search") [[ $# -eq 0 ]] && gimme_usage && return 3 ;;
        "update") [[ $# -ne 0 ]] && gimme_usage && return 4 ;;
    esac

    if [[ -n $(command -v apt-get) ]]; then
        case "$action" in
            "install")
                DEBIAN_FRONTEND="noninteractive" \
                    $sudo apt-get install -qy "$@"
                ;;
            "remove")
                if [[ -z $nosave ]]; then
                    DEBIAN_FRONTEND="noninteractive" \
                        $sudo apt-get remove "$@"
                fi
                if [[ -n $nosave ]]; then
                    DEBIAN_FRONTEND="noninteractive" \
                        $sudo apt-get purge "$@"
                fi
                ;;
            "search") apt-cache search "$@" ;;
            "update")
                for cmd in \
                    update upgrade dist-upgrade autoremove autoclean \
                ; do
                    DEBIAN_FRONTEND="noninteractive" \
                        $sudo apt-get $cmd -qy
                done
                ;;
        esac
    elif [[ -n $(command -v brew) ]]; then
        case "$action" in
            "install") brew install "$@" ;;
            "remove") brew remove "$@" ;;
            "search") brew search "$@" ;;
            "update")
                for cmd in update upgrade cleanup; do
                    brew $cmd
                done
                while read -r cask; do
                    brew cask install "$cask"
                done < <(brew cask list)
                brew cask cleanup
                ;;
        esac
    elif [[ -n $(command -v crew) ]]; then
        case "$action" in
            "install") yes | crew install "$@" ;;
            "remove") crew remove "$@" ;;
            "search") crew search "$@" ;;
            "update") crew update && yes | crew upgrade ;;
        esac
    elif [[ -n $(command -v dnf) ]]; then
        case "$action" in
            "install") $sudo dnf install -y "$@" ;;
            "remove") $sudo dnf remove "$@" ;;
            "search") dnf search -q "$@" ;;
            "update") $sudo dnf upgrade -y ;;
        esac
    elif [[ -n $(command -v pacman) ]]; then
        if [[ -n $(command -v ruaur) ]]; then
            case "$action" in
                "install") ruaur -S "$@" --noconfirm ;;
                "remove")
                    [[ -n $nosave ]] || ruaur -R "$@"
                    [[ -z $nosave ]] || ruaur -Rn "$@"
                    ;;
                "search") ruaur -Ss "$@" ;;
                "update")
                    ruaur -Su --noconfirm
                    ruaur -Sc --noconfirm
                    ;;
            esac
        else
            case "$action" in
                "install") $sudo pacman -S "$@" --noconfirm ;;
                "remove")
                    [[ -n $nosave ]] || $sudo pacman -Rs "$@"
                    [[ -z $nosave ]] || $sudo pacman -Rns "$@"
                    ;;
                "search") pacman -Ss "$@" ;;
                "update")
                    $sudo pacman -Syyu --noconfirm
                    $sudo pacman -Sc --noconfirm
                    ;;
            esac
        fi
    elif [[ -n $(command -v yum) ]]; then
        case "$action" in
            "install") $sudo yum install -y "$@" ;;
            "remove") $sudo yum remove "$@" ;;
            "search") yum search "$@" ;;
            "update") $sudo yum update -y ;;
        esac
    elif [[ -n $(command -v zypper) ]]; then
        case "$action" in
            "install") $sudo zypper install -y "$@" ;;
            "remove") $sudo zypper remove --clean-deps -y "$@" ;;
            "search") zypper search "$@" ;;
            "update") $sudo zypper update -y ;;
        esac
    else
        echo "Unsupported package manager!"
    fi

    gimme_cleanup
}

if [[ -n ${BASH_SOURCE[0]} ]]; then
    case "$0" in
        *"bash") ;;
        *) gimme "$@" ;;
    esac
fi
