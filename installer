#!/usr/bin/env bash

link() {
    unset install_vim_plugins

    echo "[+] Linking directories and files..."
    for entry in "${files[@]}"; do
        from="$here/${entry/:*/}"
        to="$(eval echo "${entry/*:/}")"

        if [[ ! -e $from ]]; then
            echo "[-] $from does not exist"
            continue
        fi

        if [[ -n $(echo "$from" | \grep -i "vim") ]]; then
            install_vim_plugins="true"
        fi

        if [[ -L $to ]]; then
            already_from="$(\ls -hl $to | awk '{print $NF}')"
            [[ $already_from != $from ]] || continue
            echo "[+] Removing symlink $to"
            rm $to
        elif [[ -e $to ]] && [[ -z $force ]]; then
            echo "[+] Moving $to to $to.milesrc.bak"
            mv $to $to.milesrc.bak
        elif [[ -d $to ]]; then
            echo "[+] Removing directory $to"
            rm -rf $to
        elif [[ -f $to ]]; then
            echo "[+] Removing file $to"
            rm -f $to
        else
            echo "[+] Ensuring $(dirname $to) exists"
            mkdir -p $(dirname $to)
        fi

        echo "[+] Symlinking $from to $to"
        ln -s $from $to
    done; unset entry
    echo "[+] done"

    if [[ -n $install_vim_plugins ]]; then
        if [[ -f $here/vim/autoload/plug.vim ]] &&
           [[ -n $(command -v git) ]]
        then
            echo "[+] Installing vim plugins..."
            vim_plugins
            echo "[+] done"
        elif [[ ! -f $here/vim/autoload/plug.vim ]]; then
            echo "[-] Can not install vim plugins without vim-plug"
        else
            echo "[!] Can not install vim plugins without git"
        fi
    fi

    echo "[+] Successfully linked milesrc"
}

link_status() {
    unset install_vim_plugins

    for entry in "${files[@]}"; do
        from="$here/${entry/:*/}"
        to="$(eval echo "${entry/*:/}")"

        if [[ ! -e $from ]]; then
            echo "[-] $from does not exist"
            continue
        fi

        if [[ -n $(echo "$from" | \grep -i "vim") ]]; then
            install_vim_plugins="true"
        fi

        if [[ -L $to ]]; then
            already_from="$(\ls -hl $to | awk '{print $NF}')"
            if [[ $already_from == $from ]]; then
                echo "[+] $to is linked"
            else
                echo "[-] $to is not linked to the milesrc"
            fi
        elif [[ -f $to ]]; then
            echo "[-] $to is not a symlink"
        else
            echo "[-] $to does not exist"
        fi
    done; unset entry

    if [[ -d $here/vim ]] && [[ -n $install_vim_plugins ]]; then
        mkdir -p $here/vim/plugs
        if [[ -n $(ls $here/vim/plugs) ]]; then
            echo "[+] vim plugins are installed"
        else
            echo "[-] vim plugins are not installed"
        fi
    fi
}

unlink() {
    unset install_vim_plugins

    for entry in "${files[@]}"; do
        from="$here/${entry/:*/}"
        to="$(eval echo "${entry/*:/}")"

        if [[ -n $(echo "$from" | \grep -i "vim") ]]; then
            install_vim_plugins="true"
        fi

        if [[ -L $to ]]; then
            already_from="$(\ls -hl $to | awk '{print $NF}')"
            if [[ $already_from == $from ]]; then
                echo "[+] Removing symlink for $to"
                rm $to
            else
                echo "[!] Did not unlink $to as it was not linked"
            fi
        fi

        if [[ ! -e $to ]] && [[ -e $to.milesrc.bak ]]; then
            echo "[+] Restoring $to.milesrc.bak to $to"
            mv $to.milesrc.bak $to
        elif [[ -e $to ]] && [[ ! -L $to ]]; then
            echo "[!] Could not unlink $to as it was not a symlink"
        fi

        if [[ -e $to.milesrc.bak ]]; then
            echo "[!] Did not restore backup of $to"
        fi
    done; unset entry

    if [[ -d $here/vim ]] && [[ -n $install_vim_plugins ]]; then
        echo "[+] Removing vim plugins"
        rm -rf $here/vim/plugs/*
    fi

    echo "[+] Successfully unlinked milesrc"
}

usage() {
    echo "Usage: ${0/*\//} [OPTIONS] <action>"
    echo "Options:"
    echo "    -f, --force"
    echo "        Do not make backups"
    echo "    -h, --help"
    echo "        Display this help message"
    echo
    echo "Actions:"
    echo "    link"
    echo "        Back up existing configs and symlink milesrc"
    echo "    status"
    echo "        Show what's linked and what isn't"
    echo "    unlink"
    echo "        Remove symlinks and restore old configs"
    echo
    exit $1
}

vim_plugins() {
    mkdir -p $here/vim/plugs
    vim -c :PlugUpgrade -c :q
    [[ $? -eq 0 ]] || exit $?
    rm -f $here/vim/autoload/plug.vim.old
    vim -c :PlugUpdate -c ":sleep 1" -c :q -c :q
    [[ $? -eq 0 ]] || exit $?
}

declare -a args
unset force
here="$(pwd)"

while [[ $# -gt 0 ]]; do
    case "$1" in
        "--") shift && args+=("$@") && break ;;
        "-f"|"--force") force="true" ;;
        "-h"|"--help") usage 0 ;;
        *) args+=("$1") ;;
    esac
    shift
done
[[ -z ${args[@]} ]] || set -- "${args[@]}"

[[ $# -eq 1 ]] || usage 1

declare -a files
files=($(\grep -Ev "^(\s*#|$)" files.default))
[[ ! -f files ]] || files=($(\grep -Ev "^(\s*#|$)" files))

case "$1" in
    "link") link ;;
    "status") link_status ;;
    "unlink") unlink ;;
    *) usage 2 ;;
esac
