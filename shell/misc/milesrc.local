# If not running interactively, don't do anything
[[ $- == *i* ]] || return

# I source this file from my $HOME/.milesrc.local so that I can
# version control the non-host-specific stuff.

# Start tmux if ssh connection
if [[ -n $(installed tmux) ]] &&
   [[ ! -f $HOME/.notmux ]] &&
   [[ -z $TMUX ]] &&
   [[ -n $SSH_CLIENT ]]
then
    exec tmux -2 new -A -s main
fi

# {{{ Env Vars
declare -a MILESRC_PROMPT
MILESRC_PROMPT=(
    # "host;white;blue;remote;white;56;root;white;160;hide_local;true"
    "host;white;blue;root;white;160"
    "venv;white;166"
    "git;light_black;white"
    "cwd;white;light_black"
    "exit;red;light_black;emotes;green;light_black"
    "vi_ins;white;green;vi_cmd;white;blue"
    "newline"
    "prompt;white;light_black"
)
export MILESRC_PROMPT
# }}}

# {{{ PATH
# }}}

# {{{ Aliases
alias dt="tmux -2 new -d -s"
alias et="exec tmux -2 new -A -s"
[[ -z $(installed pwsh) ]] || alias powershell="TERM=xterm pwsh"
alias weather="clear; curl -s wttr.in/~Lafayette,IN | head -n -2"

# Git aliases
if [[ -n $(installed git) ]]; then
    full="--date=relative --full-history"
    minimal="-b --color-words=. --ignore-blank-lines --minimal"
    tformat="tformat:\"%Cred%h%Creset %s %Cgreen%cd %Cblue%an\""

    alias diff="git diff $minimal"
    alias gd="git diff $minimal"
    alias gl="git log $full --pretty=$tformat"
    alias glg="git log $full --graph --pretty=$tformat"
    alias grh="git reset --hard"
    alias gs="git status -bs"
    alias gsm="git show $minimal"

    unset full minimal tformat
fi

# I like ruby-zoom, but in case it's not installed, create alias
if [[ -z $(installed z | grep -s "gem") ]]; then
    if [[ -n $(installed rg) ]]; then
        alias z="\rg $RG_ARGS"
    elif [[ -n $(installed ag) ]]; then
        alias z="\ag $AG_ARGS"
    elif [[ -n $(installed ack-grep) ]]; then
        alias z="\ack-grep $ACK_ARGS"
    elif [[ -n $(installed ack) ]]; then
        alias z="\ack $ACK_ARGS"
    else
        alias z="\grep $GREP_ARGS -EHnr"
    fi
    alias zf="\find . -iname"
fi
# }}}

# {{{ Functions
# }}}

case "$MILESRC_SHELL" in
    *bash)
        # {{{ Bash completions
        # Complete arTTY
        if [[ -n $(installed arTTY) ]]; then
            _arTTY_complete() {
                mapfile -t COMPREPLY < <(
                    arTTY --ls | grep -Es "^$2" | sort -u
                )
            }
            complete -F _arTTY_complete arTTY
        fi
        # }}}
        ;;
    *zsh)
        # {{{ Zsh completions
        # Complete ruby-zoom commands
        compdef _gnu_generic z zc zf zg zl zr

        # Complete arTTY
        if [[ -n $(installed arTTY) ]]; then
            compdef _gnu_generic arTTY
            _arTTY_complete() {
                reply=($(arTTY --ls))
            }
            compctl -K _arTTY_complete arTTY
        fi
        # }}}
        ;;
esac

# {{{ Wrap-up
# My weechat configs
[[ ! -f $HOME/.weechat/irc ]] || . $HOME/.weechat/irc

# Config for this host
[[ ! -f $HOME/.milesrc.$(uname -n) ]] || . $HOME/.milesrc.$(uname -n)

if [[ -n $(installed arTTY) ]]; then
    alias nt="arTTY \$(head -n 1 \$HOME/.config/arTTY/rc)"
    arTTY $(head -n 1 $HOME/.config/arTTY/rc)
else
    clear
fi
# }}}
