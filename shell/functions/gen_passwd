#!/usr/bin/env bash
# A script for generating passwords from /dev/urandom.
# by Miles Whittaker <mjwhitta@gmail.com>
#
# --------------------------------------------------------------------
# The MIT License (MIT)
#
# Copyright (c) 2017 Miles Whittaker
#
# Permission is hereby granted, free of charge, to any person
# obtaining a copy of this software and associated documentation files
# (the "Software"), to deal in the Software without restriction,
# including without limitation the rights to use, copy, modify, merge,
# publish, distribute, sublicense, and/or sell copies of the Software,
# and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
# BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
# ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
# --------------------------------------------------------------------

function gen_passwd() {
    gen_passwd_cleanup() {
        unset args char length passwd regex
        unset -f gen_passwd_cleanup
        unset -f gen_passwd_usage
    }

    gen_passwd_usage() {
        echo "Usage: gen_passwd [OPTIONS]"
        echo
        echo "Generate passwords using /dev/urandom"
        echo
        echo "Options:"
        echo "    -h, --help"
        echo "        Display this help message"
        echo
        echo "    -l, --length=LENGTH"
        echo "        Use specified length (default: $length)"
        echo
        echo "    -r, --regex=REGEX"
        echo "        Generate password matching specified regex"
        echo "        (default: $regex)"
        echo
        gen_passwd_cleanup
    }

    declare -a args
    length=64
    regex="[-A-Za-z0-9\`~!@#$%^&*()_+={}|;:'\",<.>/?]"

    while [[ $# -gt 0 ]]; do
        case "$1" in
            "--") shift && args+=("$@") && break ;;
            "-h"|"--help") gen_passwd_usage; return 0 ;;
            "-l"|"--length")
                shift
                [[ $# -eq 0 ]] && gen_passwd_usage && return 1
                length="$1"
                ;;
            "-r"|"--regex")
                shift
                [[ $# -eq 0 ]] && gen_passwd_usage && return 1
                regex="$1"
                ;;
            *) args+=("$1") ;;
        esac
        shift
    done
    [[ -z ${args[@]} ]] || set -- "${args[@]}"

    [[ $# -gt 0 ]] && gen_passwd_usage && return 2

    unset passwd
    while [[ $(echo -n "$passwd" | wc -c) -lt $length ]]; do
        char="$(head -c 1 /dev/urandom | \grep -Es "$regex")"
        [[ -z $char ]] || passwd="$passwd$char"
    done

    echo "$passwd"

    gen_passwd_cleanup
}

if [[ -n ${BASH_SOURCE[0]} ]]; then
    case "$0" in
        *"bash") ;;
        *) gen_passwd "$@" ;;
    esac
fi
