# If not running interactively, don't do anything
[[ $- == *i* ]] || return

# I source this file from my $HOME/.milesrc.local so that I can
# version control the non-host-specific stuff.

# Start tmux if ssh connection
if [[ -n $(installed tmux) ]] &&
   [[ ! -f $HOME/.notmux ]] &&
   [[ -z $TMUX ]] &&
   [[ -n $SSH_CLIENT ]]
then
    exec tmux -2 new -A -s main
fi

# {{{ Env Vars
declare -a MILESRC_PROMPT
MILESRC_PROMPT=(
    # "host;white;blue;remote;white;56;root;white;160;hide_local;true"
    "host;white;blue;root;white;160"
    "venv;white;166"
    "git;light_black;white"
    "cwd;white;light_black"
    "vi_ins;white;green;vi_cmd;white;blue"
    "newline"
    "exit;white;red"
    "prompt;white;light_black"
)
export MILESRC_PROMPT
# }}}

# {{{ PATH
# }}}

# {{{ Aliases
[[ -z $(installed pwsh) ]] || alias powershell="TERM=xterm pwsh"
alias weather="clear; curl -s wttr.in/~Lafayette,IN | head -n -2"
# }}}

# {{{ Functions
# }}}

case "$MILESRC_SHELL" in
    *bash)
        # {{{ Bash completions
        # Complete arTTY
        if [[ -n $(installed arTTY) ]]; then
            _arTTY_complete() {
                mapfile -t COMPREPLY < <(
                    arTTY --ls | \grep -E "^$2" | sort -u
                )
            }
            complete -F _arTTY_complete arTTY
        fi
        # }}}
        ;;
    *zsh)
        # {{{ Zsh completions
        # Complete arTTY
        if [[ -n $(installed arTTY) ]]; then
            compdef _gnu_generic arTTY
            _arTTY_complete() {
                reply=($(arTTY --ls))
            }
            compctl -K _arTTY_complete arTTY
        fi
        # }}}
        ;;
esac

if [[ -n $(installed ruby) ]] && [[ -n $(installed arTTY) ]]; then
    alias nt="arTTY -cs \$(cat \$HOME/.config/arTTY/rc 2>/dev/null)"
    arTTY -cs $(cat $HOME/.config/arTTY/rc 2>/dev/null)
else
    clear
fi
