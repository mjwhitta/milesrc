# If not running interactively, don't do anything
[[ $- == *i* ]] || return

# This simply starts an ssh-agent if $HOME/.ssh-agent exists. I'm
# using a file b/c this is before $HOME/.milesrc.local is sourced so
# users can't just set an env var.

# SSH agent
if [[ -n $(command -v ssh-agent) ]] && [[ -f $HOME/.ssh-agent ]]; then
    # Start agent if needed
    mkdir -p $HOME/.ssh/agent
    [[ -f $HOME/.ssh/agent/env ]] || ssh-agent >$HOME/.ssh/agent/env
    . $HOME/.ssh/agent/env >/dev/null

    # If PID exists but SSH_AUTH_SOCK doesn't, then restart agent. If
    # PID doesn't exist, try to start agent again.
    pidchk="$(\ps -p $SSH_AGENT_PID -o command | \grep "ssh-agent")"
    if [[ -z $pidchk ]] || [[ ! -e $SSH_AUTH_SOCK ]]; then
        [[ -z $pidchk ]] || ssh-agent -k 2>/dev/null
        ssh-agent >$HOME/.ssh/agent/env
        . $HOME/.ssh/agent/env >/dev/null
    fi
    unset pidchk

    # Add missing keys
    for key in $(\grep -lrs "PRIVATE KEY" $HOME/.ssh); do
        [[ -n $(ssh-add -l | \grep " $key ") ]] || ssh-add $key
    done; unset key
fi
